# queries = [
#     'смотреть сериалы онлайн',
#     'новости спорта',
#     'афиша кино',
#     'курс доллара',
#     'сериалы этим летом',
#     'курс по питону',
#     'сериалы про спорт'
#      ]
#
# words = [len(qry.split()) for qry in queries]
# # print(words)
# for w in sorted(set(words)):
#     # print(w)
#     print(f"Поисковых запросов, содержащих {w} слов:{words.count(w)/len(queries):.2%}")
#


import pytest

@pytest.mark.parametrize("queries, expected", [
    (['смотреть сериалы онлайн', 'новости спорта', 'афиша кино', 'курс доллара', 'сериалы этим летом', 'курс по питону', 'сериалы про спорт'], [3, 2, 2, 2, 3, 3, 3]),
    (['смотреть фильмы онлайн', 'курс по английскому', 'новости культуры', 'что посмотреть в выходные', 'рецепты пирогов'], [3, 3, 2, 4, 2]),
    ([], [])
])

def test_words(queries, expected):
    words = [len(qry.split()) for qry in queries]
    assert words == expected

@pytest.mark.parametrize("queries, expected", [
    (['смотреть сериалы онлайн', 'новости спорта', 'афиша кино', 'курс доллара', 'сериалы этим летом', 'курс по питону', 'сериалы про спорт'], ["Поисковых запросов, содержащих 2 слов: 14.29%", "Поисковых запросов, содержащих 3 слов: 71.43%"]),
    (['смотреть фильмы онлайн', 'курс по английскому', 'новости культуры', 'что посмотреть в выходные', 'рецепты пирогов'], ["Поисковых запросов, содержащих 2 слов: 40.00%", "Поисковых запросов, содержащих 3 слов: 40.00%", "Поисковых запросов, содержащих 4 слов: 20.00%"]),
    ([], [])
])

def test_percentage(queries, expected):
    words = [len(qry.split()) for qry in queries]
    res = []
    for w in sorted(set(words)):
        res.append(f"Поисковых запросов, содержащих {w} слов: {words.count(w)/len(queries):.2%}")
    assert res == expected